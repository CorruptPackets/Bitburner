/** @param {NS} ns **/
export async function main(ns) {
	//Array of stock symbols
	let symbols = [["ECP", 0, 0, 0], ["MGCP", 0, 0, 0], ["BLD", 0, 0, 0], ["CLRK", 0, 0, 0], ["OMTK", 0, 0, 0], ["FSIG", 0, 0, 0], ["KGI", 0, 0, 0], ["FLCM", 0, 0, 0], ["STM", 0, 0, 0], ["DCOMM", 0, 0, 0], ["HLS", 0, 0, 0], ["VITA", 0, 0, 0], ["ICRS", 0, 0, 0], ["UNV", 0, 0, 0], ["AERO", 0, 0, 0], ["OMN", 0, 0, 0], ["SLRS", 0, 0, 0], ["GPH", 0, 0, 0], ["NVMD", 0, 0, 0], ["LXO", 0, 0, 0], ["RHOC", 0, 0, 0], ["APHE", 0, 0, 0], ["SYSC", 0, 0, 0], ["CTK", 0, 0, 0], ["NTLK", 0, 0, 0], ["OMGA", 0, 0, 0], ["FNS", 0, 0, 0], ["JGN", 0, 0, 0], ["SGC", 0, 0, 0], ["CTYS", 0, 0, 0], ["MDYN", 0, 0, 0], ["TITN", 0, 0, 0], ["WDS", 0, 0, 0]]
	let commission = 100000
	let temp = 0
	
	var formatter = new Intl.NumberFormat('en-US', {
  	style: 'currency',
  	currency: 'USD',
	})

	for (let i = 0; i < symbols.length; i++) {
		let existing = ns.stock.getPosition(symbols[i][0])
		symbols[i][3] = existing[1]
	}
	while (true) {

		for (let i = 0; i < symbols.length; i++) {
			let stockPos = ns.stock.getPosition(symbols[i][0])
			let sellThreshold = stockPos[1]
			
			//Buys a share if none owned
			if (stockPos[0] === 0) {
				ns.stock.buy(symbols[i][0], 1)
			}

			stockPos = ns.stock.getPosition(symbols[i][0])
			let stockPrice = ns.stock.getPrice(symbols[i][0])
			//stops purchase loop after 2
			if (symbols[i][2] > 2) {

			}
			//purchace loop
			else {
				let buyThreshold = stockPos[1]

				if (stockPrice < buyThreshold) {
					let spendMoney = ns.getServerMoneyAvailable("home") * 0.15
					//formating as whole number
					let shareAmount = Math.floor(spendMoney / stockPrice)
					//buying stocks
					let spent = ns.stock.buy(symbols[i][0], shareAmount)
					temp = symbols[i][3]
					symbols[i][3] = spent * shareAmount + commission + temp
					//Printing to terminal in dollars
					ns.tprintf('INFO'  + symbols[i][0] + " Ballance: " + formatter.format(symbols[i][3]))
					symbols[i][1] = stockPrice
					symbols[i][2] = symbols[i][2] + 1

					await ns.sleep(500,false)

				}
			}
			//sell loop
			if (stockPos[0] > 1) {
				//Fix for Pre-existing shares
				if (symbols[i][1] === 0) {
					sellThreshold = stockPos[1]
				}
				else {
					//Setting threshold for 3% increase
					sellThreshold = symbols[i][1] * 1.03
				}
				if (stockPrice > sellThreshold) {
					let sellAmount = stockPos[0] - 1
					//making the sell
					let sold = ns.stock.sell(symbols[i][0], sellAmount)
					temp = symbols[i][3]
					symbols[i][3] = temp - sold
					//Printing to terminal in dollars
					ns.tprintf('WARN ' + symbols[i][0] + " Profit? " + formatter.format(symbols[i][3]))
					symbols[i][3] = 0
					symbols[i][2] = 0
					await ns.sleep(500,false)
				}
				
				await ns.sleep(1000,false)
			}
		}
		await ns.sleep(1000,false)

	}
}
